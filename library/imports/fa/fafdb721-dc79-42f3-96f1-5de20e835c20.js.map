{"version":3,"sources":["assets\\Script\\Game.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Game extends cc.Component {\r\n\r\n    gravity: number = -300;\r\n    wall: cc.TiledLayer = null;\r\n    gameSize = cc.v2(640, 960);\r\n\r\n    @property(cc.TiledMap) map: cc.TiledMap = null;\r\n    @property(cc.RigidBody) jet: cc.RigidBody = null;\r\n\r\n    onLoad() {\r\n        var physics_manager = cc.director.getPhysicsManager();\r\n        physics_manager.enabled = true;\r\n        physics_manager.debugDrawFlags = 1;\r\n        physics_manager.gravity = cc.v2(0, this.gravity);\r\n\r\n        this.wall = this.map.getLayers()[0];\r\n    }\r\n\r\n    start() {\r\n\r\n        let mapSize = this.map.getMapSize();\r\n        let tileSize = this.map.getTileSize();\r\n\r\n        let x = -(mapSize.width * tileSize.width) / 2 + tileSize.width / 2;\r\n        let y = (mapSize.height * tileSize.height) / 2 - tileSize.height / 2;\r\n\r\n        let offset = cc.v2(x, y);\r\n\r\n        for (let i = 0; i < mapSize.width; i++) {\r\n            for (let j = 0; j < mapSize.height; j++) {\r\n                let n = this.wall.getTileGIDAt(i, j);\r\n\r\n                // If tiles are present\r\n                if (n != 0) {\r\n\r\n                    let x = offset.x + i * tileSize.width;\r\n                    let y = offset.y - j * tileSize.height;\r\n\r\n                    // Add collision box\r\n                    let collider: cc.PhysicsBoxCollider = this.wall.node.addComponent(cc.PhysicsBoxCollider);\r\n                    collider.offset.set(cc.v2(x, y));\r\n                    collider.size.width = tileSize.width;\r\n                    collider.size.height = tileSize.height;\r\n                    collider.apply();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}